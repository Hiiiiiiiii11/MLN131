"use client"

import { useState, useEffect } from "react"
import "./Blogpage.css";

const HistoryBlog = () => {
  const [blogContent, setBlogContent] = useState(null)
  const [loading, setLoading] = useState(true)
  const [error, setError] = useState(null)
  const [currentTopic, setCurrentTopic] = useState("Karl_Marx")

  // Danh s√°ch c√°c ch·ªß ƒë·ªÅ l·ªãch s·ª≠
  const historyTopics = [
    { id: "Karl_Marx", title: "Karl Marx", description: "Nh√† t∆∞ t∆∞·ªüng vƒ© ƒë·∫°i c·ªßa ch·ªß nghƒ©a x√£ h·ªôi" },
    { id: "Friedrich_Engels", title: "Friedrich Engels", description: "ƒê·ªìng s√°ng l·∫≠p ch·ªß nghƒ©a x√£ h·ªôi khoa h·ªçc" },
    { id: "Vladimir_Lenin", title: "Vladimir Lenin", description: "L√£nh t·ª• c√°ch m·∫°ng Nga v√† l√Ω lu·∫≠n gia Marxist" },
    { id: "Ho_Chi_Minh", title: "H·ªì Ch√≠ Minh", description: "Ch·ªß t·ªãch H·ªì Ch√≠ Minh - Ng∆∞·ªùi anh h√πng d√¢n t·ªôc" },
    {
      id: "Communist_Manifesto",
      title: "Tuy√™n ng√¥n ƒê·∫£ng C·ªông s·∫£n",
      description: "T√°c ph·∫©m kinh ƒëi·ªÉn c·ªßa Marx v√† Engels",
    },
    { id: "Russian_Revolution", title: "C√°ch m·∫°ng Nga 1917", description: "Cu·ªôc c√°ch m·∫°ng thay ƒë·ªïi th·∫ø gi·ªõi" },
  ]

  useEffect(() => {
    const fetchHistoryData = async () => {
      setLoading(true)
      setError(null)

      try {
        // S·ª≠ d·ª•ng Wikipedia API ƒë·ªÉ l·∫•y n·ªôi dung l·ªãch s·ª≠ th·ª±c t·∫ø
        const response = await fetch(`https://en.wikipedia.org/api/rest_v1/page/summary/${currentTopic}?redirect=true`)

        if (!response.ok) throw new Error("Kh√¥ng th·ªÉ t·∫£i d·ªØ li·ªáu l·ªãch s·ª≠")

        const data = await response.json()

        // L·∫•y th√™m n·ªôi dung chi ti·∫øt
        const contentResponse = await fetch(
          `https://en.wikipedia.org/w/api.php?action=query&format=json&titles=${currentTopic}&prop=extracts&exintro=true&explaintext=true&exsectionformat=plain&origin=*`,
        )

        const contentData = await contentResponse.json()
        const pages = contentData.query.pages
        const pageId = Object.keys(pages)[0]
        const fullContent = pages[pageId]?.extract || data.extract

        setBlogContent({
          title: data.title,
          extract: data.extract,
          fullContent: fullContent,
          thumbnail: data.thumbnail?.source,
          description: data.description,
          url: data.content_urls?.desktop?.page,
        })
      } catch (err) {
        setError(err.message)
      } finally {
        setLoading(false)
      }
    }

    fetchHistoryData()
  }, [currentTopic])

  if (loading) return <div className="blog-loading">ƒêang t·∫£i n·ªôi dung l·ªãch s·ª≠...</div>
  if (error) return <div className="blog-error">L·ªói: {error}</div>

  return (
    <div className="history-blog-wrapper">
      <div className="topic-selector">
        <h2>Ch·ªçn ch·ªß ƒë·ªÅ l·ªãch s·ª≠:</h2>
        <div className="topic-grid">
          {historyTopics.map((topic) => (
            <button
              key={topic.id}
              className={`topic-card ${currentTopic === topic.id ? "active" : ""}`}
              onClick={() => setCurrentTopic(topic.id)}
            >
              <h3>{topic.title}</h3>
              <p>{topic.description}</p>
            </button>
          ))}
        </div>
      </div>

      <div className="blog-container">
        <div className="blog-header">
          {blogContent?.thumbnail && (
            <div className="blog-thumbnail">
              <img src={blogContent.thumbnail || "/placeholder.svg"} alt={blogContent.title} />
            </div>
          )}
          <h1 className="blog-title">{blogContent?.title || "N·ªôi dung l·ªãch s·ª≠"}</h1>
          <p className="blog-description">{blogContent?.description}</p>
          <p className="blog-date">C·∫≠p nh·∫≠t: {new Date().toLocaleDateString("vi-VN")}</p>
        </div>

        <div className="blog-content">
          <div className="content-summary">
            <h3>T√≥m t·∫Øt:</h3>
            <p>{blogContent?.extract}</p>
          </div>

          <div className="content-full">
            <h3>N·ªôi dung chi ti·∫øt:</h3>
            <p>{blogContent?.fullContent}</p>
          </div>

          {blogContent?.url && (
            <div className="source-link">
              <a href={blogContent.url} target="_blank" rel="noopener noreferrer">
                üìñ ƒê·ªçc th√™m tr√™n Wikipedia
              </a>
            </div>
          )}
        </div>
      </div>
    </div>
  )
}

export default HistoryBlog
